name: Integration Test

# 워크플로우 실행 조건
# 1. PR에 'run-integration-test' 라벨이 추가될 때
# 2. 라벨이 있는 PR에 새로운 커밋이 push될 때
# 주의: PR이 merge될 때는 실행되지 않음 (deploy.yaml에서 실행)
on:
  pull_request:
    types: [ labeled, synchronize ]
    branches: [ "develop", "main", "master" ]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  integration-test:
    # 1. 라벨을 붙였을 때 (labeled 이벤트)
    # 2. 라벨이 있는 상태에서 새로운 커밋이 푸시되었을 때 (synchronize 이벤트)
    if: |
      github.event_name == 'pull_request' && 
      contains(github.event.pull_request.labels.*.name, 'run-integration-test') &&
      (github.event.action == 'labeled' || github.event.action == 'synchronize') &&
      github.event.pull_request.merged != true
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost -uroot -proot"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: ✅ 소스코드 체크아웃 (서브모듈 포함)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.CONFIG_REPO_PAT }}
      
      - name: 🔄 live-config를 최신 Master로 업데이트
        run: |
          cd live-config
          git checkout Master
          git pull origin Master
          cd ..
      
      - name: 📁 설정 yml 파일들 복사
        run: |
          mkdir -p ./src/main/resources
          cp live-config/application-dev.yml ./src/main/resources/
          cp live-config/application-test.yml ./src/main/resources/
          cp live-config/common.yml ./src/main/resources/
          mkdir -p ./src/test/resources
          cp live-config/application-test.yml ./src/test/resources/
          cp live-config/common.yml ./src/test/resources/
      
      - name: ☕ JDK 21 설정
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      
      - name: ✅ gradlew 실행 권한 부여
        run: chmod +x ./gradlew
      
      - name: 🔍 MySQL 서비스 연결 대기
        run: |
          echo "MySQL 서비스 시작 대기 중..."
          for i in {1..30}; do
            if mysqladmin ping -h127.0.0.1 -P3306 -uroot -proot --silent; then
              echo "✅ MySQL 연결 성공!"
              break
            fi
            echo "MySQL 연결 대기 중... ($i/30)"
            sleep 2
          done

      # 전체 테스트 실행 (통합 테스트 포함)
      - name: 🧪 통합 테스트 실행
        run: ./gradlew clean test jacocoTestReport -Pprofile=test

      # PR에 통합 테스트 커버리지 결과를 코멘트로 추가
      - name: 📊 통합 테스트 커버리지 코멘트
        uses: madrapps/jacoco-report@v1.7.1
        with:
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 55
          min-coverage-changed-files: 55
          title: "📊 통합 테스트 커버리지 리포트"
          update-comment: true
          pass-emoji: '🍏'
          fail-emoji: '🔴'
          skip-if-no-changes: false
          coverage-overall-threshold: 90
          coverage-changed-files-threshold: 80
      
      - name: 💾 통합 테스트 리포트 업로드
        if: always()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: integration-test-coverage-report
          path: build/reports/
      
      - name: 🔨 프로젝트 빌드
        run: ./gradlew clean build -x test -Pprofile=test